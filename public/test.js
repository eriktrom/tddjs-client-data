// Generated by CoffeeScript 1.6.1
var assert, output, testCase;

assert = function(message, expr) {
  if (!expr) {
    throw new Error(message);
  }
  assert.count++;
  return true;
};

assert.count = 0;

output = function(text, color) {
  var p;
  p = document.createElement("p");
  p.innerHTML = text;
  p.style.color = color;
  return document.body.appendChild(p);
};

testCase = function(name, tests) {
  var color, hasSetup, hasTeardown, successful, test, testCount, text;
  assert.count = 0;
  successful = 0;
  testCount = 0;
  hasSetup = typeof tests.setUp === "function";
  hasTeardown = typeof tests.tearDown === "function";
  for (test in tests) {
    if (!/^test/.test(test)) {
      continue;
    }
    testCount++;
    try {
      if (hasSetup) {
        tests.setUp();
      }
      tests[test]();
      output(test, "#0c0");
      if (hasTeardown) {
        tests.tearDown();
      }
      successful++;
    } catch (e) {
      output("Test failed: " + e.message, "#c00");
    }
  }
  text = "<strong>" + testCount + " tests " + (testCount - successful) + " failures</strong>";
  color = successful === testCount ? "#0c0" : "#c00";
  return output(text, color);
};

testCase("strftime test", {
  setUp: function() {
    return this.date = new Date(2009, 9, 2, 22, 14, 45);
  },
  "test format specifier %Y": function() {
    return assert("%Y should return full year", Date.formats.Y(this.date) === 2009);
  },
  "test format specifier %m": function() {
    return assert("%m should return month", Date.formats.m(this.date) === "10");
  },
  "test format specifier %d": function() {
    return assert("%d should return date", Date.formats.d(this.date) === "02");
  },
  "test format specifier %y": function() {
    return assert("%y should return year as two digits", Date.formats.y(this.date) === "09");
  },
  "test format shorthand %F": function() {
    return assert("%F should act as %Y-%m-%d", Date.formats.F === "%Y-%m-%d");
  },
  "test format shorthand %D": function() {
    return assert("%D should act as %m/%d/%y", Date.formats.D === "%m/%d/%y");
  }
});
